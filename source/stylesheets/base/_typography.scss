@include establish-baseline;

@function map-fetch($map, $keys) {
	$key: nth($keys, 1);
	$length: length($keys);
	$value: map-get($map, $key);
	@if ($length > 1) {
		$rest: ();
		@for $i from 2 through $length {
			$rest: append($rest, nth($keys, $i))
		}
		@return map-fetch($value, $rest)
	} @else {
		@return $value;
	}
}

// Compass Vertical Rhythm setup 
$base-font-size: 20px;
$base-line-height: 25px;
$rhythm-unit: "rem";
$rem-with-px-fallback: true;

html, body {
    font-size: 20px;
    font-family: $font-family;
    background-color: $wash-color;
}

// The type-scale Map contains the whole type scale.
// Add your own sizes or modify these, they will be available in the type-scale mixin for use.

// Default Sizes
$type-prefix: "t-";
$type-scale: (
    tiny: (
        font-size: 14px,
        base-lines: 0.425
    ),
    small: (
        font-size: 16px,
        base-lines: 0.625
    ),
    base: (
        font-size: 19px,
        base-lines: 1
    ),
    medium: (
        font-size: 20px,
        base-lines: 1
    ),
    mediumlarger: (
        font-size: 22px,
        base-lines: 1.25
    ),
    large: (
        font-size: 24px,
        base-lines: 1.25
    ),
    xlarge: (
        font-size: 28px,
        base-lines: 1.45
    ),
    xxlarge: (
        font-size: 33px,
        base-lines: 1.45
    )
);

$type-weight: (
    thin: 200,
    light: 300,
    regular: 400,
    bold: 700,
    black: 900
);

// A type scaling utility $type-scale map with the predefined values

 // Each loop that outputs all of the type scales as placeholders with their type-prefix
 // ex. %t-tiny, %t-small
@each $scale in map-keys($type-scale) {
    %#{$type-prefix}#{$scale} {
        @include adjust-font-size-to (
            map-fetch($type-scale, $scale font-size),   
            map-fetch($type-scale, $scale base-lines)
        );
    }
}

// A mixin for using type scale
// Parameters: 
// $scale (tiny, small...) 
// $extend (boolean) - true by default, if needed inside media query use false to @include the content instead of @extend
// ex. @include type-scale(small) or @include type-scale(small, false) for use inside media queries. 

@mixin type-scale($scale, $extend: false, $map: $type-scale) {
    @if $extend {
        @extend %#{$type-prefix}#{$scale};
    }
    @else {
        @include adjust-font-size-to(
            map-fetch($map, $scale font-size),
            map-fetch($map, $scale base-lines)
        );
    }
}

// A simple type-weight mixin
// ex. @include type-weight(strong);
@mixin type-weight($weight) {
    font-weight: map-get($type-weight, $weight);
}

// A quick ligature mixin, to be updated with a more modular one
@mixin type-ligatures() {
    -moz-font-feature-settings: "liga=1, dlig=1";
    -ms-font-feature-settings: "liga", "dlig";
    -webkit-font-feature-settings: "liga", "dlig";
    -o-font-feature-settings: "liga", "dlig";
    font-feature-settings: "liga", "dlig";
}

// Headings
#{h1, h2, h3, h4, h5, h6} {
    font-family: $base-font-family;
    margin-top: 0;
    @include margin-trailer(1);
    @include type-ligatures;
}
h1, .alpha {
    @include type-scale(xxlarge);
}
h2, .beta {
    @include type-scale(xlarge);
}
h3, .gamma {
    @include type-scale(large);
}
h4, .delta {
    @include type-scale(medium);
}
h5, .epsilon {
    @include type-scale(base);
}
h6, .zeta {
    @include type-scale(small);
}

// Paragraphs
p {
    @include margin-trailer(1);
    @include word-break(break-word);
    @include hyphens(auto);
    @include type-ligatures;
    @include type-scale(base);
    font-family: $font-family;
}

// Small
small {
    @include type-scale(small);
}

a {
	color: $primary-color;
    text-decoration: none;

    &:hover {

    }

    &.dim {
        color: #333;

        &:hover {
            color: $primary-color;
        }
    }
}

blockquote {
	
	p {

	}
}

ul, ul li ul {
    list-style: none;
    margin: 0;
    @include type-scale(base);
}

dl dt, dl dd {
    margin: 0;
    @include type-scale(base);
}

.serif {
	font-family:$font-family;
}

.sans {
	font-family:$sans-font-family;
}

.large {
    @include type-scale(large);
}

.medium {
    @include type-scale(medium);
}

.base {
    @include type-scale(base);
}

.normal {

}

.caps {
	text-transform: uppercase;
}

.light {

}

.no-margin {

}

.rhythm {
    @include margin-trailer(1);
}

.rhythm-2 {
    @include margin-trailer(2);
}

.rhythm-3 {
    @include margin-trailer(3);
}

.h-sub {
    color: $primary-color;
}

%small-text {
	font-family: $sans-font-family;
	color: #999;
}

%small-link {
	color: $primary-color;
	text-transform: uppercase;
}	

%post-text {
	font-family: $sans-font-family;
	color: #656868;	
}

.two-column {
    @media #{$medium-up} {
        -moz-column-count: 2;
        -moz-column-gap: 50px;
        -webkit-column-count: 2;
        -webkit-column-gap: 50px;

        p, ul, dl {
            -webkit-column-break-inside: avoid;
            -moz-column-break-inside: avoid;
            -moz-page-break-inside: avoid;
            page-break-inside: avoid;
        }
    }
}

.flip {
    @media #{$medium-up} {
        @include rotate(90deg);
        position: absolute;
        display: inline-block;
        width: 1em;
        left: 0;
        top: 0;
        margin: 0;
        margin-left: -2.5em !important;
        &.scroll-to-fixed-fixed {
            left: auto !important;
            margin-left: -2.5em !important;
        }
    }

    @media #{$large-up} {
        left: 0;
        margin-left: -3em !important;
        &.scroll-to-fixed-fixed {
            margin-left: -3em !important;
        }
    }    
}

.leader {
    .flip {
        left: -1em;
        top: .5em;

        @media #{$large-up} {
            left: -2.95em;
        }    
    }
}

.more {
    white-space: nowrap;
}

@media #{$medium-up} {

// Medium Overrights
    $type-scale: (
        tiny: (
            font-size: 14px,
            base-lines: .825
        ),
        small: (
            font-size: 16px,
            base-lines: .9
        ),
        base: (
            font-size: 18px,
            base-lines: 1.125
        ),
        medium: (
            font-size: 20px,
            base-lines: 1.25
        ),
        mediumlarger: (
            font-size: 24px,
            base-lines: 1.375
        ),
        large: (
            font-size: 30px,
            base-lines: 1.425
        ),
        xlarge: (
            font-size: 33px,
            base-lines: 1.5
        ),
        xxlarge: (
            font-size: 35px,
            base-lines: 1.75
        )
    );

    h1, .alpha, .xxlarge {
        @include type-scale(xxlarge);
    }
    h2, .beta, .xlarge {
        @include type-scale(xlarge);
    }
    h3, .gamma, .large {
        @include type-scale(large);
    }
    h4, .delta, .medium {
        @include type-scale(medium);
    }
    h5, .epsilon, .base{
        @include type-scale(base);
    }
    h6, .zeta, .small {
        @include type-scale(small);
    }

    .omega, .tiny {
        @include type-scale(tiny);
    }

    ul, ul li ul, dl dt, dl dd{
        @include type-scale(small);
    }

    p {
        @include type-scale(medium);
    }
}

@media #{$large-up} {

// Large Overrights and Includes
    $type-scale: (
        tiny: (
            font-size: 14px,
            base-lines: .825
        ),
        small: (
            font-size: 16px,
            base-lines: 1
        ),
        base: (
            font-size: 20px,
            base-lines: 1.125
        ),
        medium: (
            font-size: 22px,
            base-lines: 1.25
        ),
        mediumlarger: (
            font-size: 24px,
            base-lines: 1.375
        ),
        large: (
            font-size: 30px,
            base-lines: 1.425
        ),
        xlarge: (
            font-size: 33px,
            base-lines: 1.75
        ),
        xxlarge: (
            font-size: 40px,
            base-lines: 1.825
        )
    ) !global;

    h1, .alpha, .xxlarge {
        @include type-scale(xxlarge);
    }
    h2, .beta, .xlarge {
        @include type-scale(xlarge);
    }
    h3, .gamma, .large {
        @include type-scale(large);
    }
    h4, .delta, .medium {
        @include type-scale(medium);
    }
    h5, .epsilon, .base{
        @include type-scale(base);
    }
    h6, .zeta, .small {
        @include type-scale(small);
    }

    ul, ul li ul, dl dt, dl dd {
        @include type-scale(base);
    }

    p {
        @include type-scale(base, false);
        letter-spacing: .75px;
    }
}
